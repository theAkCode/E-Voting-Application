<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scratch to Reveal</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background: linear-gradient(135deg);
            font-family: 'Arial', sans-serif;
            overflow: hidden;
        }
        .container {
            position: relative;
            width: 400px;
            height: 300px;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
            background-color: white;
            border: 2px solid #f2d8dd;
            transition: transform 0.3s ease-in-out;
        }
        .container:hover {
            transform: scale(1.05);
        }
        img {
            width: 100%;
            height: 100%;
            border-radius: 15px;
        }
        canvas {
            position: absolute;
            top: 0;
            left: 0;
            cursor: pointer;
            border-radius: 15px;
            box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.1);
            transition: box-shadow 0.3s ease;
        }
        canvas:hover {
            box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.3);
        }
        .title {
            position: absolute;
            top: -30px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 24px;
            color: #fff;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);
            background-color:white;
            padding: 10px 20px;
            border-radius: 5px;
            animation: fadeIn 1.5s ease-out;
        }
        .scratch-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 20px;
            color: #fff;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);
            background-color: rgba(0, 0, 0, 0.6);
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: opacity 0.3s ease;
        }
        .footer {
            position: absolute;
            bottom: -40px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 14px;
            color: #fff;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);
            padding: 5px 20px;
            background-color:white;
            border-radius: 5px;
            animation: slideUp 1.5s ease-out;
        }
        .footer p {
            margin: 0;
        }
        .reset-btn {
            position: absolute;
            bottom: -70px;
            left: 50%;
            transform: translateX(-50%);
            padding: 10px 20px;
            background: linear-gradient(135deg, #ff9a8b, #ff6a88);
            color: white;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .reset-btn:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }
        .reset-btn:active {
            transform: translateY(1px);
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateX(-50%) translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(-50%) translateY(0);
            }
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="title"></div>
        <div class="scratch-text" id="scratchText">Scratch Me!</div>
        <img src="WhatsApp Image 2024-11-06 at 00.34.06_5a12844c.jpg" alt="image">
        <canvas id="scratchCanvas"></canvas>
        <div class="footer">
            <p>Scratch 20% to Reveal!</p>
        </div>
        <button class="reset-btn" id="resetBtn">Reset</button>
    </div>

    <script>
        const canvas = document.getElementById('scratchCanvas');
        const ctx = canvas.getContext('2d');
        const image = document.querySelector('img');
        const scratchText = document.getElementById('scratchText');
        const resetBtn = document.getElementById('resetBtn');

        canvas.width = image.width;
        canvas.height = image.height;

        let isDrawing = false;
        let scratchedPixels = 0;
        const totalPixels = canvas.width * canvas.height;

        // Fill the canvas with a gray overlay
        ctx.fillStyle = 'pink';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        // Function to start drawing when mouse is pressed
        canvas.addEventListener('mousedown', (e) => {
            isDrawing = true;
            scratch(e);
            hideScratchText();  // Hide "Scratch Me!" text once scratching starts
        });

        // Function to stop drawing when mouse is released
        canvas.addEventListener('mouseup', () => {
            isDrawing = false;
        });

        // Function to draw on the canvas (scratch effect)
        canvas.addEventListener('mousemove', (e) => {
            if (isDrawing) {
                scratch(e);
                checkScratchedPercentage();
            }
        });

        // Function that removes the gray overlay where the mouse moves
        function scratch(e) {
            const x = e.offsetX;
            const y = e.offsetY;

            ctx.globalCompositeOperation = 'destination-out'; // erase the gray overlay
            ctx.beginPath();
            ctx.arc(x, y, 20, 0, Math.PI * 2);
            ctx.fill();
            ctx.closePath();
        }

        // Check if scratched area exceeds 20%
        function checkScratchedPercentage() {
            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
            const pixels = imageData.data;

            scratchedPixels = 0;

            for (let i = 3; i < pixels.length; i += 4) { // Check alpha channel
                if (pixels[i] === 0) { // Fully transparent pixel
                    scratchedPixels++;
                }
            }

            const scratchedPercentage = (scratchedPixels / totalPixels) * 100;

            if (scratchedPercentage >= 20) {
                revealFullImage();
            }
        }

        // Function to reveal the full hidden image
        function revealFullImage() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            canvas.style.pointerEvents = 'none'; // Disable further scratching
        }

        // Function to hide the "Scratch Me!" text
        function hideScratchText() {
            scratchText.style.opacity = '0';
        }

        // Reset the scratch area
        resetBtn.addEventListener('click', () => {
            ctx.fillStyle = 'pink';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            canvas.style.pointerEvents = 'auto'; // Enable scratching again
            scratchedPixels = 0;
            scratchText.style.opacity = '1'; // Show the text again
        });
    </script>
</body>
</html>

